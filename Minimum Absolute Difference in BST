/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
     vector<int>v;
    void in(TreeNode*root)
    {
        if(root==NULL) return;
        in(root->left);
        v.push_back(root->val);
        in(root->right);
            
    }
    int getMinimumDifference(TreeNode* root) {
       
        in(root);
        int m=INT_MAX;
        for(int i=1;i<v.size();i++)
        {
            if (abs(v[i-1]-v[i])<m) m=abs(v[i]-v[i-1]); 
        }
      return m;
    }
};
